name: Documentation Automation

on:
  schedule:
    - cron: '*/15 * * * *'  # Run every 15 minutes
  workflow_dispatch:         # Manual trigger
  push:
    branches: [ main ]      # Push trigger
    paths-ignore:           # Prevent loops from automated commits
      - '**/*.md'
  pull_request:
    branches: [ main ]      # PR trigger

jobs:
  auto_update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: write
    environment: production
    env:
      ACTIONS_STEP_DEBUG: true

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0     # Get full history for better documentation

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs mkdocstrings mkdocs-material
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    - name: Update Progress Tracking
      if: hashFiles('tools/update_progress.py') != ''
      run: |
        python tools/update_progress.py || echo "Progress tracking skipped"

    - name: Validate Model Cards
      if: hashFiles('tools/validators/model_card_validator.py') != ''
      run: |
        python tools/validators/model_card_validator.py implementation/model_cards/*.md || echo "Model card validation skipped"

    - name: Check Documentation
      run: |
        find . -name "*.py" -not -path "./venv/*" -exec python -m doctest {} + || echo "Doctest completed with some issues"
        python -m pydoc -w . || echo "Pydoc generation completed with some issues"

    - name: Run markdownlint
      uses: DavidAnson/markdownlint-cli2-action@v11
      continue-on-error: true  # Don't fail the workflow on markdown issues
      with:
        globs: "**/*.md"
        config: '.markdownlint.json'
        fix: true  # Try to auto-fix what it can

    - name: Check Links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'
        folder-path: '.'
        max-depth: 2

    # Consolidate all file modifications before git operations
    - name: Process Documentation Updates
      run: |
        # Run markdown fixer if it exists
        if [ -f tools/fix_markdown.py ]; then
          python tools/fix_markdown.py || echo "Markdown fixing skipped"
        fi
        
        # Only proceed with git operations if there are actual changes
        if ! git diff --quiet; then
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          
          git add .
          git commit -m "Auto-update documentation: $TIMESTAMP [skip ci]"
          git push || echo "Push failed - likely due to concurrent updates"
        else
          echo "No changes to commit"
        fi

    - name: Create Documentation PR
      if: success() && github.event_name != 'pull_request'
      uses: peter-evans/create-pull-request@v5
      with:
        commit-message: "docs: Auto-update documentation [skip ci]"
        title: "Documentation Updates"
        body: |
          Automated documentation update.
          
          Changes include:
          - Progress tracking updates
          - Documentation improvements
          - Model card validations
          - Link checks
          
          Please review the changes.
        branch: docs/auto-updates
        delete-branch: true
        labels: documentation

    - name: Generate Documentation Site
      if: github.event_name == 'push' || github.event_name == 'schedule'
      run: |
        mkdocs build || echo "Documentation site build skipped"

    - name: Deploy Documentation
      if: (github.event_name == 'push' || github.event_name == 'schedule') && success()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site

    - name: Notify on Failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Documentation Workflow Failed',
            body: 'The documentation automation workflow has failed. Please check the logs for more details.'
          })
